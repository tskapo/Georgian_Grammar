'use strict';
/*
 ბმა — სიტყვა
 ბამ — ფუძე
 ბ   — ძირი
 */

const ხმოვნები = ['ა', 'ე', 'ი', 'ო', 'უ'];
const ი_ბოლოხმოვნიანები = {გეი: true, ჩაი: true, ტრამვაი: true, ტაქსი: true, ჰელსინკი: true, დუბაი: true};
const ბოლოსართები = {
  ო: {
    ემფატიკური: false,
    ბოლოკიდურა: true
  },
  ა: {ემფატიკური: false},
  ელ: {ემფატიკური: false},
  ურ: {ემფატიკური: false},
  ულ: {ემფატიკური: false},
  მდე: {ემფატიკური: false},
  კენ: {ემფატიკური: true},
  დან: {ემფატიკური: true},
  გან: {ემფატიკური: true},
  თვის: {ემფატიკური: true},
  მ: {ემფატიკური: true},
  ის: {ემფატიკური: true},
  ს: {ემფატიკური: true},
  ით: {ემფატიკური: true},
  თ: {ემფატიკური: true},
  ად: {ემფატიკური: true},
  დ: {ემფატიკური: true},
  ება: {ემფატიკური: false},
  ობა: {ემფატიკური: false},
  ვა: {ემფატიკური: false}
};

Object.keys(ბოლოსართები).forEach(ბოლოსართი =>
{
  if (ბოლოსართები[ბოლოსართი].ემფატიკური) {
    ბოლოსართები[ბოლოსართი + 'ა'] = {
      ემფატიკური: false,
      ბოლოკიდურა: true
    };
  }
});


const სიტყვები = {
  სახლი: {
    კლასი: 'არსებითი',
    აღწერა: {ბოლოხმოვნიანი: false, კვეცადი: false, კუმშვადი: false, წესიერი: true}
  },
  კედელი: {
    კლასი: 'არსებითი',
    აღწერა: {ბოლოხმოვნიანი: false, კვეცადი: false, კუმშვადი :true, წესიერი: true}
  },
  მანქანა: {
    კლასი: 'არსებითი',
    აღწერა: {ბოლოხმოვნიანი: true, კვეცადი: true, კუმშვადი: false, წესიერი: true}
  },
  ქვეყანა: {
    კლასი: 'არსებითი',
    აღწერა: {ბოლოხმოვნიანი: true, კვეცადი: true, კუმშვადი: true, წესიერი: true}
  },
  თავი: {
    კლასი: 'არსებითი',
    აღწერა: {ბოლოხმოვნიანი: false, კვეცადი: false, კუმშვადი: false, წესიერი: true}
  },
  ამბავი: {
    კლასი: 'არსებითი',
    აღწერა: {ბოლოხმოვნიანი: false, კვეცადი: false, კუმშვადი: true, წესიერი: false},
    ფუძე: 'ამბ'
  }
};

function მოძებნე_სიტყვარში()
{

  return false;
}
class სიტყვა {
  constructor(სიტყვა)
  {
    this.სიტყვა = სიტყვა;
    this.ი_ბოლოხმოვნიანი = არის_ი_ბოლოხმოვნიანი(სიტყვა);
    let აღწერა = მოძებნე_სიტყვარში(სიტყვა);
    if (!აღწერა) {
      this.უცნობი_სიტყვა = true;
    }
    else {
      this.უცნობი_სიტყვა = false;
      this.კლასი = აღწერა.კლასი;
      this.აღწერა = აღწერა.აღწერა;
      if (აღწერა.hasOwnProperty("ფუძე")) {
        this.ფუძე = აღწერა.ფუძე;
      }
      if (აღწერა.hasOwnProperty("ძირი")) {
        this.ძირი = აღწერა.ძირი;
      }
      this.ბოლოხმოვნიანი = არის_ბოლოხმოვნიანი(სიტყვა, აღწერა);
    }
  }


}


class არსებითი extends სიტყვა {
  constructor(სიტყვა)
  {
    super(სიტყვა);
  }

  static  არის_ი_ბოლოხმოვნიანი = არის_ი_ბოლოხმოვნიანი
}

function არის_ი_ბოლოხმოვნიანი(სიტყვა)
{
  return ი_ბოლოხმოვნიანები.hasOwnProperty(სიტყვა)
}

function არის_ბოლოხმოვნიანი(სიტყვა, აღწ)
{
  let ბოლო = სიტყვა.substr(-1);
  if (ბოლო === "ი") {
    return არის_ი_ბოლოხმოვნიანი(სიტყვა)
  }
  return true;
}

function შეკუმშე(ძირი)
{
  for (var i = ძირი.length - 1; i > -1; i--) {
    if (ხმოვნები.indexOf(ძირი.charAt(i)) > -1) {
      return ძირი.substring(0, i - 1) + (ძირი.charAt(i) === 'ო' ? 'ვ' : '') + ძირი.substr(i + 1)
    }
  }
  return ძირი;
}

function მოთხრობითი(ფუძე, ემფატური)
{
  if (ემფატური) {
    return ფუძე + 'მა';
  }
  else {
    return ფუძე + 'მ' + ხმოვნები.indexOf(ფუძე.substr(-1)) > -1 ? '' : 'ა';
  }
}
